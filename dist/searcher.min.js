window.Searcher=class Searcher{constructor(e,t){this.database=t.database||{},this.fetch=(...e)=>window.fetch(...e),this.SHOW_NUM=40,this.TOTAL_NUM=Object.keys(this.database).length,this.initializeDOM(e),this.createEventListener()}initializeDOM(e){this.dom={},this.dom.parent=e,this.dom.parent.classList.add("app"),this.dom.container=this.createAndAppendElement(e,"div",{class:"searcher-container"}),this.dom.seacher=this.createAndAppendElement(this.dom.container,"div",{class:"searcher"}),this.dom.input=this.createAndAppendElement(this.dom.seacher,"input",{class:"searcher-input",placeholder:"keywords..."}),this.dom.cardsContainer=this.createAndAppendElement(this.dom.container,"div",{class:"cards-container"}),this.dom.input.focus()}addMark(e,t){const s=new RegExp(t,"gi");return(e=e.replace(/(<mark>|<\/mark>)/gim,"")).replace(s,"<mark>$&</mark>")}createCard(e,t,s=null){const a=t.k.reverse().join("/"),r=this.createAndAppendElement(e,"a",{class:"card",href:"#"}),n=this.createAndAppendElement(r,"div",{class:"card-container"}),i=this.createAndAppendElement(n,"h4",{class:"card-title",innerText:`${t.n}`}),d=this.createAndAppendElement(n,"p",{class:"card-keys",innerText:`${a}`});return s&&(i.innerHTML=this.addMark(i.innerHTML,s),d.innerHTML=this.addMark(d.innerHTML,s)),r}createAndAppendElement(e,t,s={}){const a=document.createElement(t);return s.class&&(s.class.split(" ").forEach((e=>a.classList.add(e))),delete s.class),s.dataset&&(Object.keys(s.dataset).forEach((e=>a.dataset[e]=s.dataset[e])),delete s.dataset),Object.keys(s).forEach((e=>a[e]=s[e])),e.appendChild(a),a}search(e){const t=e.target.value.trim();if(!t)return void(this.dom.cardsContainer.innerHTML="");const s=document.createDocumentFragment(),a=Object.values(this.database);var r=1;for(let e of a)if(this.parseKeyword(t,e)&&(this.createCard(s,e,t),++r>=this.SHOW_NUM))break;this.dom.cardsContainer.innerHTML="",this.dom.cardsContainer.appendChild(s)}createEventListener(){this.dom.input&&this.search&&(this.search=this.search.bind(this),this.dom.input.addEventListener("input",this.search))}parseKeyword(e,t){const s=e.toLowerCase().split(","),a=s[0],r=(s[1],t.n||""),n=t.k||[];if(r.toLowerCase().includes(a))return!0;for(let e of n)if(e.toLowerCase().includes(a))return!0;return!1}};